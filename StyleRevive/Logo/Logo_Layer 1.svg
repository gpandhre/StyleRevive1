<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="265.72464mm"
   height="142.47626mm"
   viewBox="0 0 265.72464 142.47626"
   version="1.1"
   id="svg1"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <defs
     id="defs1">
    <linearGradient
       id="swatch839">
      <stop
         style="stop-color:#ffffff;stop-opacity:1;"
         offset="0"
         id="stop839" />
    </linearGradient>
    <filter
       style="color-interpolation-filters:sRGB"
       id="filter18"
       x="-0.26640326"
       y="-0.47341841"
       width="1.5328065"
       height="1.9468368">
      <feGaussianBlur
         result="result6"
         stdDeviation="7.243 2.436"
         in="SourceGraphic"
         id="feGaussianBlur13" />
      <feComposite
         in2="SourceGraphic"
         operator="xor"
         result="result10"
         id="feComposite14"
         in="result6" />
      <feGaussianBlur
         result="result2"
         stdDeviation="8"
         id="feGaussianBlur14" />
      <feComposite
         in2="SourceGraphic"
         operator="atop"
         in="result10"
         result="result91"
         id="feComposite15" />
      <feComposite
         result="result4"
         in="result2"
         operator="xor"
         in2="result91"
         id="feComposite16" />
      <feGaussianBlur
         in="result4"
         result="result3"
         stdDeviation="4"
         id="feGaussianBlur16" />
      <feSpecularLighting
         result="result5"
         specularExponent="5"
         specularConstant="1.10000002"
         surfaceScale="18"
         id="feSpecularLighting16">
        <feDistantLight
           azimuth="235"
           elevation="55"
           id="feDistantLight16" />
      </feSpecularLighting>
      <feComposite
         in="result3"
         k3="1.1"
         k2="0.5"
         operator="arithmetic"
         result="result7"
         in2="result5"
         k1="0.5"
         id="feComposite17"
         k4="0" />
      <feComposite
         in="result7"
         operator="atop"
         in2="SourceGraphic"
         result="result8"
         id="feComposite18" />
    </filter>
  </defs>
  <g
     id="layer1"
     style="mix-blend-mode:normal"
     transform="translate(16.557968,3.3038025)">
    <path
       id="path51"
       style="fill:#ffcc00;fill-opacity:1;stroke-width:0.264583;filter:url(#filter18)"
       d="M 73.517476,31.353125 C 66.610054,31.21729 59.64515,32.39216 53.287703,35.096566 46.930257,37.800971 41.196591,42.06023 37.028748,47.570223 c -4.292484,5.67477 -6.861776,12.628833 -7.326168,19.729028 -0.464393,7.100195 1.173099,14.320133 4.62349,20.542932 3.255687,5.87165 8.239965,10.930362 14.453898,13.472567 3.106967,1.2711 6.489115,1.89795 9.840743,1.70945 3.351628,-0.18849 6.667688,-1.20277 9.490894,-3.01893 3.293503,-2.11871 5.877921,-5.33158 7.202144,-9.017025 1.324224,-3.685445 1.372787,-7.822869 0.0956,-11.524878 -0.587744,-1.703616 -1.465008,-3.335921 -2.752287,-4.597136 -1.287279,-1.261214 -3.013892,-2.126317 -4.815727,-2.160075 -1.262133,-0.02365 -2.496469,0.350948 -3.685046,0.77618 -1.188578,0.425233 -2.367598,0.908215 -3.6127,1.116211 -2.442668,0.408052 -5.019104,-0.307349 -7.007324,-1.78387 -1.98822,-1.476521 -3.39487,-3.672881 -4.07417,-6.054411 -0.926041,-3.246573 -0.485819,-6.897729 1.351339,-9.730155 1.98153,-3.055012 5.522057,-5.003885 9.159647,-5.169711 3.637591,-0.165826 7.291107,1.412169 9.760128,4.08864 0.706424,0.765778 1.338868,1.630022 2.225187,2.177645 0.44316,0.273811 0.948548,0.461526 1.469161,0.479557 0.520613,0.01803 1.056341,-0.144057 1.441256,-0.49506 0.225987,-0.206077 0.395484,-0.472359 0.494544,-0.761711 0.09906,-0.289352 0.12801,-0.601084 0.0925,-0.904854 -0.07102,-0.607541 -0.400761,-1.170086 -0.85731,-1.577165 C 74.125467,54.445633 73.52954,54.18508 72.923714,53.998771 72.317888,53.812462 71.692923,53.69393 71.08455,53.516113 69.003693,52.907914 67.191922,51.634687 65.418229,50.388139 63.644536,49.14159 61.821777,47.879606 59.732788,47.299955 58.026162,46.826402 56.19753,46.83562 54.477295,47.257064 c -1.720235,0.421444 -3.332055,1.248067 -4.723743,2.343526 -2.783375,2.190917 -4.637784,5.40082 -5.697326,8.780859 -0.76364,2.436084 -1.145449,5.001967 -1.00304,7.550961 0.142409,2.548993 0.817124,5.080605 2.069124,7.305497 1.252001,2.224891 3.090121,4.134011 5.325257,5.367631 2.235135,1.23362 4.867827,1.771723 7.393347,1.398364 1.504127,-0.222362 2.943264,-0.754271 4.423503,-1.101741 1.480238,-0.347471 3.068323,-0.50279 4.495849,0.02067 1.181143,0.433114 2.176848,1.320985 2.801896,2.412773 0.625049,1.091787 0.886246,2.376873 0.805636,3.632336 -0.08061,1.255463 -0.495179,2.479996 -1.134298,3.563607 -0.639119,1.083611 -1.498533,2.029245 -2.473234,2.824634 -1.841484,1.502713 -4.094712,2.470867 -6.433199,2.895947 -2.338487,0.42508 -4.75981,0.316888 -7.081221,-0.19327 -4.752327,-1.044379 -9.089024,-3.795921 -12.162566,-7.568013 -3.204161,-3.9324 -5.025022,-8.901486 -5.50664,-13.951087 -0.481618,-5.049601 0.334692,-10.175197 1.992643,-14.969112 2.359089,-6.821236 6.534577,-13.138956 12.43335,-17.298169 5.710881,-4.026731 12.752308,-5.852702 19.730578,-6.216675 7.632011,-0.39807 15.46226,0.920922 22.163505,4.595069 6.128926,3.360356 11.251354,8.792414 13.513904,15.405778 0.74171,2.167982 1.1766,4.470101 0.98702,6.753593 -0.18958,2.283491 -1.03848,4.551489 -2.60863,6.220292 -1.26349,1.342876 -2.93231,2.246389 -4.664828,2.877344 -1.732519,0.630954 -3.544654,1.008455 -5.335592,1.44694 -1.580436,0.386946 -3.145251,0.835349 -4.697904,1.321883 a 2.5676985,2.4325564 0 0 0 -1.11311,-0.240812 2.5676985,2.4325564 0 0 0 -2.567802,2.432926 2.5676985,2.4325564 0 0 0 1.122412,2.006079 c 0.01705,0.0264 0.02828,0.05629 0.04754,0.08113 0.117456,0.151517 0.274617,0.271635 0.451652,0.345199 0.263473,0.109481 0.563148,0.113396 0.840259,0.04547 0.04399,-0.01078 0.08418,-0.03297 0.127124,-0.04703 a 2.5676985,2.4325564 0 0 0 2.349727,-1.509468 c 0.393893,-0.153597 0.821568,-0.221301 1.244886,-0.206189 0.549906,0.01963 1.090919,0.172186 1.586983,0.410311 0.992127,0.476249 1.788953,1.277823 2.500106,2.1177 2.280467,2.69325 3.865646,5.890121 5.676137,8.919352 3.47759,5.818541 8.02042,11.236597 14.05444,14.325221 5.00461,2.56171 10.76608,3.37117 16.38298,3.1285 5.6169,-0.24268 11.13842,-1.4909 16.59175,-2.85823 5.50606,-1.38055 11.00138,-2.895317 16.2171,-5.135603 3.333,-1.431607 6.53295,-3.151292 9.73016,-4.864819 5.36852,-2.877228 10.95089,-5.805011 17.0279,-6.216675 1.37524,-0.09316 2.80629,-0.04415 4.05453,0.540535 0.78638,0.368349 1.46316,0.932825 2.10168,1.521354 0.63852,0.58853 1.25117,1.209564 1.95234,1.721859 0.43973,0.321282 0.92572,0.602768 1.46244,0.695048 0.26836,0.04614 0.54668,0.04344 0.81029,-0.02481 0.26361,-0.06824 0.51214,-0.20356 0.70073,-0.399975 0.23236,-0.242003 0.36613,-0.569274 0.40256,-0.902787 0.0364,-0.333514 -0.0204,-0.672813 -0.13229,-0.989087 -0.25592,-0.723106 -0.79359,-1.32336 -1.42524,-1.758549 -0.63165,-0.435189 -1.35597,-0.71743 -2.08876,-0.944129 -1.40368,-0.434248 -2.86108,-0.676894 -4.32428,-0.810803 -6.04279,-0.553023 -12.12014,0.740866 -17.87643,2.66082 -5.7563,1.919953 -11.28407,4.464459 -16.99018,6.5288 -8.91546,3.225413 -18.36765,5.277193 -27.83964,4.864819 -5.61461,-0.244438 -11.27065,-1.385435 -16.21658,-4.054016 -4.69481,-2.533081 -8.58989,-6.351882 -11.89282,-10.540958 -1.32063,-1.674947 -2.56019,-3.420148 -4.02043,-4.974891 -1.460232,-1.554742 -3.170495,-2.929393 -5.169191,-3.674194 -1.28735,-0.479723 -2.674766,-0.671638 -4.045747,-0.589111 1.072933,-0.60509 2.271519,-0.98 3.490226,-1.18184 1.428076,-0.236516 2.881116,-0.265772 4.328418,-0.291455 1.447304,-0.02568 2.900434,-0.04859 4.330484,-0.272852 1.43005,-0.224262 2.84697,-0.658683 4.0597,-1.449007 2.00508,-1.30668 3.31189,-3.518008 3.85765,-5.848222 0.54575,-2.330213 0.38783,-4.776839 -0.0739,-7.125146 C 109.52362,51.535837 105.84156,45.516232 100.81607,41.08328 93.419435,34.558767 83.378605,31.547045 73.517476,31.353125 Z M 125.7856,46.075224 c -1.95732,0 -3.64338,0.494889 -5.05757,1.484664 -1.40394,0.982704 -2.10581,2.156241 -2.10581,3.520715 0,1.131171 0.46633,2.262421 1.39888,3.393591 0.58412,0.714052 0.87591,1.176968 0.87591,1.389063 0,0.325211 -0.18402,0.597323 -0.55293,0.816487 -0.35868,0.212095 -0.80976,0.318327 -1.35289,0.318327 -0.46115,0 -0.989,-0.131157 -1.58337,-0.392741 v 4.188892 c 0.98379,0.318142 1.97797,0.47749 2.98225,0.47749 2.09054,0 3.8581,-0.487842 5.30303,-1.463476 1.45518,-0.975635 2.18282,-2.167049 2.18282,-3.573942 0,-0.961495 -0.43059,-1.958322 -1.2914,-2.990516 l -0.47646,-0.572574 c -0.36891,-0.445399 -0.55345,-0.812913 -0.55345,-1.102775 0,-0.339352 0.16929,-0.629341 0.50746,-0.869715 0.33818,-0.240374 0.743,-0.360701 1.2144,-0.360701 0.24595,0 0.59451,0.05312 1.04541,0.159163 v -4.125329 c -0.83007,-0.197955 -1.67546,-0.296623 -2.53628,-0.296623 z m 3.81217,0.360185 v 4.157369 h 4.78059 v 10.318233 h 6.24045 V 50.592778 h 4.7656 v -3.01532 l -1.06092,-1.142049 z m 15.78664,1.142049 4.91856,5.295284 v 8.038269 h 6.24096 v -8.038269 l 5.93349,-6.437333 h -6.20996 l -2.90524,2.980179 -2.70527,-2.980179 h -5.27254 z m 17.70796,-1.142049 v 9.289872 c 0,1.626057 0.63562,2.898779 1.90634,3.817855 1.27073,0.912006 3.04354,1.367875 5.31854,1.367875 h 1.65985 v -4.199227 h -0.32246 c -0.9223,0 -1.54267,-0.110015 -1.86035,-0.329179 -0.30744,-0.226234 -0.46096,-0.675055 -0.46096,-1.346688 v -8.600508 z m 17.15503,0 c -2.09055,0 -3.7151,0.382126 -4.87309,1.145666 -1.14775,0.76354 -1.72134,1.837892 -1.72134,3.223576 v 5.673555 c 0,1.435173 0.60934,2.53445 1.82883,3.29799 1.21948,0.756471 2.9823,1.134815 5.28804,1.134815 h 4.90358 v -4.135665 h -4.19664 c -0.72759,0 -1.20918,-0.04607 -1.44487,-0.137976 -0.2357,-0.09898 -0.35347,-0.300612 -0.35347,-0.604614 0,-0.268653 0.11251,-0.459458 0.33796,-0.572575 0.2357,-0.113117 0.63053,-0.169499 1.18391,-0.169499 h 4.07314 v -3.224093 h -3.44321 c -0.65585,0 -1.11168,-0.05312 -1.36787,-0.159163 -0.25619,-0.113117 -0.38447,-0.31097 -0.38447,-0.593762 0,-0.480748 0.53835,-0.720886 1.61437,-0.720886 h 3.98115 V 46.435409 Z M 80.814705,50.2729 80.003902,97.302071 83.5179,100.00527 82.977364,51.624239 Z m 33.785535,12.162565 v 2.432927 h 88.38324 v -2.432927 z m 2.37712,4.098458 v 14.938623 h 6.03167 v -10.92233 h 1.0697 c 1.46584,0 2.19883,0.353718 2.19883,1.061434 0,0.802563 -0.63394,1.20406 -1.90169,1.20406 h -0.47542 v 3.84111 l 2.92695,4.815726 h 6.32881 l -3.47679,-6.161897 c 1.79268,-1.036037 2.68924,-2.309127 2.68924,-3.819406 0,-1.481094 -0.72283,-2.702849 -2.16886,-3.665926 -1.29746,-0.860931 -3.12513,-1.291394 -5.48235,-1.291394 z m 24.15666,0 c -2.02047,0 -3.5906,0.393869 -4.70979,1.18184 -1.10928,0.787972 -1.66398,1.896907 -1.66398,3.326929 v 5.85494 c 0,1.481094 0.58976,2.615955 1.76837,3.403926 1.17861,0.780676 2.88181,1.170988 5.11028,1.170988 h 4.73925 v -4.268473 h -4.05557 c -0.70321,0 -1.16902,-0.04726 -1.39682,-0.14211 -0.22779,-0.102145 -0.34158,-0.310005 -0.34158,-0.623735 0,-0.277249 0.10922,-0.474442 0.32712,-0.591178 0.22779,-0.116737 0.60876,-0.175183 1.1436,-0.175183 h 3.93722 v -3.326929 h -3.32796 c -0.63387,0 -1.07479,-0.05437 -1.3224,-0.163814 -0.24761,-0.116737 -0.37104,-0.321041 -0.37104,-0.612883 0,-0.49613 0.51965,-0.744657 1.5596,-0.744657 h 3.84783 v -4.289661 z m 5.66012,0 8.78034,15.792318 8.83926,-15.792318 h -6.72982 l -2.05001,4.661731 -1.85725,-4.661731 z m 18.942,0 v 14.938623 h 6.03167 V 66.533923 Z m 7.04194,0 8.78035,15.792318 8.83925,-15.792318 h -6.72982 l -2.05001,4.661731 -1.85725,-4.661731 z m 24.89926,0 c -2.02048,0 -3.59009,0.393869 -4.70927,1.18184 -1.10928,0.787972 -1.66398,1.896907 -1.66398,3.326929 v 5.85494 c 0,1.481094 0.58924,2.615955 1.76785,3.403926 1.17861,0.780676 2.88233,1.170988 5.1108,1.170988 h 4.73924 v -4.268473 h -4.05608 c -0.70321,0 -1.1685,-0.04726 -1.3963,-0.14211 -0.2278,-0.102145 -0.34158,-0.310005 -0.34158,-0.623735 0,-0.277249 0.1087,-0.474442 0.32659,-0.591178 0.2278,-0.116737 0.60929,-0.175183 1.14412,-0.175183 h 3.93671 V 72.344938 H 199.208 c -0.63388,0 -1.0748,-0.05437 -1.3224,-0.163814 -0.24761,-0.116737 -0.37156,-0.321041 -0.37156,-0.612883 0,-0.49613 0.52016,-0.744657 1.56011,-0.744657 h 3.84783 v -4.289661 z" />
  </g>
  <script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
